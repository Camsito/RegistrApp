{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Camsito/Desktop/RegistrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../services/loginGuard/service-guard.service\";\nclass GuardGuard {\n  constructor(router, serviceGuard) {\n    this.router = router;\n    this.serviceGuard = serviceGuard;\n  }\n  mostrarMensaje(mensaje) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this.toastController.create({\n        message: mensaje,\n        duration: 2000,\n        position: 'top'\n      });\n      toast.present();\n    })();\n  }\n  canActivate(route, state) {\n    if (this.serviceGuard.hasPassedLogin()) {\n      return true;\n    } else {\n      return this.router.parseUrl('/home');\n    }\n  }\n}\n_class = GuardGuard;\n_class.ɵfac = function GuardGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ServiceGuardService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { GuardGuard };","map":{"version":3,"names":["GuardGuard","constructor","router","serviceGuard","mostrarMensaje","mensaje","_this","_asyncToGenerator","toast","toastController","create","message","duration","position","present","canActivate","route","state","hasPassedLogin","parseUrl","i0","ɵɵinject","i1","Router","i2","ServiceGuardService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Camsito\\Desktop\\RegistrApp\\src\\app\\home\\guard\\guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ServiceGuardService } from '../../../services/loginGuard/service-guard.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuardGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router, \r\n    private serviceGuard: ServiceGuardService) {}\r\n  async mostrarMensaje(mensaje: string) {\r\n    const toast = await this.toastController.create({\r\n      message: mensaje,\r\n      duration: 2000,\r\n      position: 'top'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      \r\n      \r\n    if (this.serviceGuard.hasPassedLogin()) {\r\n      return true;\r\n    } else {\r\n      return this.router.parseUrl('/home');\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;;AAKA,MAGaA,UAAU;EACrBC,YACUC,MAAc,EACdC,YAAiC;IADjC,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;EAAwB;EACxCC,cAAcA,CAACC,OAAe;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClC,MAAMC,KAAK,SAASF,KAAI,CAACG,eAAe,CAACC,MAAM,CAAC;QAC9CC,OAAO,EAAEN,OAAO;QAChBO,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE;OACX,CAAC;MACFL,KAAK,CAACM,OAAO,EAAE;IAAC;EAClB;EAEAC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAG1B,IAAI,IAAI,CAACd,YAAY,CAACe,cAAc,EAAE,EAAE;MACtC,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,OAAO,CAAC;;EAExC;;SAvBWnB,UAAU;;mBAAVA,MAAU,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;;SAAVzB,MAAU;EAAA0B,OAAA,EAAV1B,MAAU,CAAA2B,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEP5B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}