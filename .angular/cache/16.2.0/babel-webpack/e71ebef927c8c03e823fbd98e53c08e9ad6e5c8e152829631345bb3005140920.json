{"ast":null,"code":"import _asyncToGenerator from \"D:/PracticaMovil/RegistrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomePage = class HomePage {\n  constructor(router, http, toastController, sharedService // Inyecta el SharedService\n  ) {\n    this.router = router;\n    this.http = http;\n    this.toastController = toastController;\n    this.sharedService = sharedService;\n  }\n  mostrarMensaje(mensaje) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this.toastController.create({\n        message: mensaje,\n        duration: 2000,\n        position: 'top'\n      });\n      toast.present();\n    })();\n  }\n  validarYLogin() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const usuario = document.querySelector('input[name=\"User\"]').value;\n      const contrasena = document.querySelector('input[name=\"Pass\"]').value;\n      if (!usuario || !contrasena) {\n        const toast = yield _this2.toastController.create({\n          message: 'Los campos no pueden estar vacíos.',\n          duration: 2000,\n          position: 'top'\n        });\n        toast.present();\n        return;\n      }\n      const apiUrl = 'http://localhost:3000/api/login';\n      _this2.http.post(apiUrl, {\n        usuario,\n        contrasena\n      }).subscribe(response => {\n        if (response.message === 'Inicio de sesión exitoso') {\n          _this2.mostrarMensaje('Credenciales Validas');\n          _this2.router.navigate(['/menu']);\n        } else {\n          _this2.mostrarMensaje('Credenciales inválidas');\n        }\n      }, error => {\n        console.error('Error en la solicitud:', error);\n        _this2.mostrarMensaje('Credenciales Invalidas');\n      });\n    })();\n  }\n  navigateToMenu() {\n    this.router.navigate(['/menu']); // Navigate to the \"Menu\" page\n  }\n};\n\nHomePage = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})], HomePage);\nexport { HomePage };","map":{"version":3,"names":["Component","HomePage","constructor","router","http","toastController","sharedService","mostrarMensaje","mensaje","_this","_asyncToGenerator","toast","create","message","duration","position","present","validarYLogin","_this2","usuario","document","querySelector","value","contrasena","apiUrl","post","subscribe","response","navigate","error","console","navigateToMenu","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\PracticaMovil\\RegistrApp\\src\\app\\home\\home.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../ruta-al-tu-shared-service'; // Reemplaza esto con la ruta correcta\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    public toastController: ToastController,\n    private sharedService: SharedService // Inyecta el SharedService\n  ) {}\n  async mostrarMensaje(mensaje: string) {\n    const toast = await this.toastController.create({\n      message: mensaje,\n      duration: 2000,\n      position: 'top'\n    });\n    toast.present();\n  }\n\n  async validarYLogin() {\n    const usuario = (document.querySelector('input[name=\"User\"]') as HTMLInputElement).value;\n    const contrasena = (document.querySelector('input[name=\"Pass\"]') as HTMLInputElement).value;\n\n    if (!usuario || !contrasena) {\n      const toast = await this.toastController.create({\n        message: 'Los campos no pueden estar vacíos.',\n        duration: 2000,\n        position: 'top'\n      });\n      toast.present();\n      return;\n    }\n\n    const apiUrl = 'http://localhost:3000/api/login';\n\n    this.http.post(apiUrl, { usuario, contrasena }).subscribe(\n      (response: any) => {\n        if (response.message === 'Inicio de sesión exitoso') {\n          this.mostrarMensaje('Credenciales Validas');\n          this.router.navigate(['/menu']);\n        } else {\n          this.mostrarMensaje('Credenciales inválidas');\n        }\n      },\n      (error) => {\n        console.error('Error en la solicitud:', error);\n        this.mostrarMensaje('Credenciales Invalidas');\n      }\n    );\n  }\n\n  navigateToMenu() {\n    this.router.navigate(['/menu']); // Navigate to the \"Menu\" page\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAWzC,IAAaC,QAAQ,GAArB,MAAaA,QAAQ;EACnBC,YACUC,MAAc,EACdC,IAAgB,EACjBC,eAAgC,EAC/BC,aAA4B,CAAC;EAAA,E;IAH7B,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IACL,KAAAC,eAAe,GAAfA,eAAe;IACd,KAAAC,aAAa,GAAbA,aAAa;EACpB;EACGC,cAAcA,CAACC,OAAe;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClC,MAAMC,KAAK,SAASF,KAAI,CAACJ,eAAe,CAACO,MAAM,CAAC;QAC9CC,OAAO,EAAEL,OAAO;QAChBM,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE;OACX,CAAC;MACFJ,KAAK,CAACK,OAAO,EAAE;IAAC;EAClB;EAEMC,aAAaA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAR,iBAAA;MACjB,MAAMS,OAAO,GAAIC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAsB,CAACC,KAAK;MACxF,MAAMC,UAAU,GAAIH,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAsB,CAACC,KAAK;MAE3F,IAAI,CAACH,OAAO,IAAI,CAACI,UAAU,EAAE;QAC3B,MAAMZ,KAAK,SAASO,MAAI,CAACb,eAAe,CAACO,MAAM,CAAC;UAC9CC,OAAO,EAAE,oCAAoC;UAC7CC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;SACX,CAAC;QACFJ,KAAK,CAACK,OAAO,EAAE;QACf;;MAGF,MAAMQ,MAAM,GAAG,iCAAiC;MAEhDN,MAAI,CAACd,IAAI,CAACqB,IAAI,CAACD,MAAM,EAAE;QAAEL,OAAO;QAAEI;MAAU,CAAE,CAAC,CAACG,SAAS,CACtDC,QAAa,IAAI;QAChB,IAAIA,QAAQ,CAACd,OAAO,KAAK,0BAA0B,EAAE;UACnDK,MAAI,CAACX,cAAc,CAAC,sBAAsB,CAAC;UAC3CW,MAAI,CAACf,MAAM,CAACyB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAChC,MAAM;UACLV,MAAI,CAACX,cAAc,CAAC,wBAAwB,CAAC;;MAEjD,CAAC,EACAsB,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CX,MAAI,CAACX,cAAc,CAAC,wBAAwB,CAAC;MAC/C,CAAC,CACF;IAAC;EACJ;EAEAwB,cAAcA,CAAA;IACZ,IAAI,CAAC5B,MAAM,CAACyB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACnC;CACD;;AAnDY3B,QAAQ,GAAA+B,UAAA,EALpBhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,gBAAgB;EAC7BC,SAAS,EAAE,CAAC,gBAAgB;CAC7B,CAAC,C,EACWlC,QAAQ,CAmDpB;SAnDYA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}