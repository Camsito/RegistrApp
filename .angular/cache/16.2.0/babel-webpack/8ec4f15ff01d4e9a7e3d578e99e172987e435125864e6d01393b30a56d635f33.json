{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@awesome-cordova-plugins/sqlite/ngx\";\nlet AppComponent = /*#__PURE__*/(() => {\n  var _class;\n  class AppComponent {\n    constructor(platform, sqlite) {\n      this.platform = platform;\n      this.sqlite = sqlite;\n      this.initializeApp();\n    }\n    initializeApp() {\n      this.platform.ready().then(() => {\n        // Una vez que la plataforma esté lista, crea la base de datos y las tablas\n        this.createDatabase();\n        this.agregarCredencial('Cam', '12345');\n      });\n    }\n    createDatabase() {\n      this.sqlite.create({\n        name: 'usuarios.db',\n        location: 'default'\n      }).then(db => {\n        // Crea la tabla de credenciales si no existe\n        db.executeSql(`\n        CREATE TABLE IF NOT EXISTS credenciales (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          usuario TEXT,\n          contrasena TEXT\n        )`, []).then(() => console.log('Tabla de credenciales creada')).catch(error => console.error('Error al crear la tabla de credenciales', error));\n      }).catch(error => console.error('Error al abrir la base de datos SQLite', error));\n    }\n    agregarCredencial(usuario, contrasena) {\n      this.sqlite.create({\n        name: 'usuarios.db',\n        location: 'default'\n      }).then(db => {\n        db.executeSql('INSERT INTO credenciales (usuario, contrasena) VALUES (Cam, 12345)', [usuario, contrasena]).then(() => {\n          console.log('Credencial agregada con éxito.');\n        }).catch(error => console.error('Error al agregar la credencial', error));\n      }).catch(error => console.error('Error al abrir la base de datos SQLite', error));\n    }\n  }\n  _class = AppComponent;\n  _class.ɵfac = function AppComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.SQLite));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵelement(1, \"ion-router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i1.IonApp, i1.IonRouterOutlet]\n  });\n  return AppComponent;\n})();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}