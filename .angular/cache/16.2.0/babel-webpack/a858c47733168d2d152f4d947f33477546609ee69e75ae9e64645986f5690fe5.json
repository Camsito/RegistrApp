{"ast":null,"code":"import _asyncToGenerator from \"D:/Practica movil/Angular/Proyecto semestral/RegistrAPP/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FolderPage = class FolderPage {\n  constructor(activatedRoute, router, toastController // Agrega esto al constructor\n  ) {\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.toastController = toastController;\n  }\n  ngOnInit() {\n    this.folder = this.activatedRoute.snapshot.paramMap.get('id');\n  }\n  validarDatos() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const usuario = document.getElementsByName('User')[0].value;\n      const contraseña = document.getElementsByName('Pass')[0].value;\n      // Realiza la lógica de validación aquí.\n      if (usuario && contraseña) {\n        _this.router.navigate(['/menu']); // Ajusta la ruta según tu configuración.\n      } else {\n        const toast = yield _this.toastController.create({\n          message: 'Los campos de usuario y contraseña son obligatorios.',\n          duration: 3000,\n          position: 'bottom' // Posición en la pantalla ('top', 'middle', 'bottom')\n        });\n\n        console.log(\"Campos obligatorios\");\n        toast.present();\n      }\n    })();\n  }\n};\nFolderPage = __decorate([Component({\n  selector: 'app-folder',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss']\n})], FolderPage);\nexport { FolderPage };","map":{"version":3,"names":["Component","FolderPage","constructor","activatedRoute","router","toastController","ngOnInit","folder","snapshot","paramMap","get","validarDatos","_this","_asyncToGenerator","usuario","document","getElementsByName","value","contraseña","navigate","toast","create","message","duration","position","console","log","present","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Practica movil\\Angular\\Proyecto semestral\\RegistrAPP\\src\\app\\home\\home.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular'; // Agrega esta importación\n\n@Component({\n  selector: 'app-folder',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class FolderPage implements OnInit {\n  public folder!: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastController: ToastController // Agrega esto al constructor\n  ) {}\n\n  ngOnInit() {\n    this.folder = this.activatedRoute.snapshot.paramMap.get('id') as string;\n  }\n\n  async validarDatos() {\n    const usuario = (document.getElementsByName('User')[0] as HTMLInputElement).value;\n    const contraseña = (document.getElementsByName('Pass')[0] as HTMLInputElement).value;\n\n    // Realiza la lógica de validación aquí.\n    if (usuario && contraseña) {\n      this.router.navigate(['/menu']); // Ajusta la ruta según tu configuración.\n    } else {\n      const toast = await this.toastController.create({\n        message: 'Los campos de usuario y contraseña son obligatorios.',\n        duration: 3000, // Duración en milisegundos\n        position: 'bottom' // Posición en la pantalla ('top', 'middle', 'bottom')\n      });\n      console.log(\"Campos obligatorios\")\n      toast.present();\n    }\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AASjD,IAAaC,UAAU,GAAvB,MAAaA,UAAU;EAGrBC,YACUC,cAA8B,EAC9BC,MAAc,EACdC,eAAgC,CAAC;EAAA,E;IAFjC,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,eAAe,GAAfA,eAAe;EACtB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAW;EACzE;EAEMC,YAAYA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAChB,MAAMC,OAAO,GAAIC,QAAQ,CAACC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAsB,CAACC,KAAK;MACjF,MAAMC,UAAU,GAAIH,QAAQ,CAACC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAsB,CAACC,KAAK;MAEpF;MACA,IAAIH,OAAO,IAAII,UAAU,EAAE;QACzBN,KAAI,CAACR,MAAM,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OAClC,MAAM;QACL,MAAMC,KAAK,SAASR,KAAI,CAACP,eAAe,CAACgB,MAAM,CAAC;UAC9CC,OAAO,EAAE,sDAAsD;UAC/DC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE,QAAQ,CAAC;SACpB,CAAC;;QACFC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCN,KAAK,CAACO,OAAO,EAAE;;IAChB;EACH;CACD;AA9BY1B,UAAU,GAAA2B,UAAA,EALtB5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,kBAAkB;EAC/BC,SAAS,EAAE,CAAC,kBAAkB;CAC/B,CAAC,C,EACW9B,UAAU,CA8BtB;SA9BYA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}