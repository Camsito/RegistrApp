{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@awesome-cordova-plugins/sqlite/ngx\";\nclass AppComponent {\n  constructor(platform, sqlite) {\n    this.platform = platform;\n    this.sqlite = sqlite;\n    this.initializeApp();\n  }\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.createDatabase();\n    });\n    // this.agregarCredencial('Cam', '12345');\n    // this.agregarCredencial('Diego', '12345');\n    // retry(2);\n  }\n\n  createDatabase() {\n    this.sqlite.create({\n      name: 'usuarios.db',\n      location: 'default'\n    }).then(db => {\n      // Crea la tabla de credenciales si no existe\n      db.executeSql(`\n        CREATE TABLE IF NOT EXISTS credenciales (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          usuario TEXT,\n          contrasena TEXT\n        )`, []).then(() => console.log('Tabla de credenciales creada')).catch(error => console.error('Error al crear la tabla de credenciales', error));\n    }).catch(error => console.error('Error al abrir la base de datos SQLite', error));\n  }\n  agregarCredencial(usuario, contrasena) {\n    this.sqlite.create({\n      name: 'usuarios.db',\n      location: 'default'\n    }).then(db => {\n      db.executeSql('INSERT INTO credenciales (usuario, contrasena) VALUES (?, ?)', [usuario, contrasena]).then(() => {\n        console.log('Credencial agregada con éxito.');\n      }).catch(error => console.error('Error al agregar la credencial', error));\n    }).catch(error => console.error('Error al abrir la base de datos SQLite', error));\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.SQLite));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-app\");\n      i0.ɵɵelement(1, \"ion-router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i1.IonApp, i1.IonRouterOutlet],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["AppComponent","constructor","platform","sqlite","initializeApp","ready","then","createDatabase","create","name","location","db","executeSql","console","log","catch","error","agregarCredencial","usuario","contrasena","i0","ɵɵdirectiveInject","i1","Platform","i2","SQLite","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\Camsito\\Desktop\\RegistrApp\\src\\app\\app.component.ts","C:\\Users\\Camsito\\Desktop\\RegistrApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@awesome-cordova-plugins/sqlite/ngx';\r\nimport { retry } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private sqlite: SQLite,\r\n  ) {\r\n    this.initializeApp();\r\n  }\r\n\r\n  \r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      this.createDatabase();\r\n    });\r\n    // this.agregarCredencial('Cam', '12345');\r\n    // this.agregarCredencial('Diego', '12345');\r\n    // retry(2);\r\n  }\r\n\r\n  createDatabase() {\r\n    this.sqlite.create({\r\n      name: 'usuarios.db',\r\n      location: 'default'\r\n    })\r\n    .then((db: SQLiteObject) => {\r\n      // Crea la tabla de credenciales si no existe\r\n      db.executeSql(`\r\n        CREATE TABLE IF NOT EXISTS credenciales (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          usuario TEXT,\r\n          contrasena TEXT\r\n        )`, [])\r\n        .then(() => console.log('Tabla de credenciales creada'))\r\n        .catch(error => console.error('Error al crear la tabla de credenciales', error));\r\n    })\r\n    .catch(error => console.error('Error al abrir la base de datos SQLite', error));\r\n  }\r\n  agregarCredencial(usuario: string, contrasena: string) {\r\n    this.sqlite.create({\r\n      name: 'usuarios.db',\r\n      location: 'default'\r\n    })\r\n    .then((db: SQLiteObject) => {\r\n      db.executeSql('INSERT INTO credenciales (usuario, contrasena) VALUES (?, ?)', [usuario, contrasena])\r\n        .then(() => {\r\n          console.log('Credencial agregada con éxito.');\r\n        })\r\n        .catch(error => console.error('Error al agregar la credencial', error));\r\n    })\r\n    .catch(error => console.error('Error al abrir la base de datos SQLite', error));\r\n  }\r\n}\r\n","<ion-app>\r\n  <ion-router-outlet></ion-router-outlet>\r\n</ion-app>\r\n"],"mappings":";;;;AAKA,MAKaA,YAAY;EAEvBC,YACUC,QAAkB,EAClBC,MAAc;IADd,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,MAAM,GAANA,MAAM;IAEd,IAAI,CAACC,aAAa,EAAE;EACtB;EAGAA,aAAaA,CAAA;IACX,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAE,CAACC,IAAI,CAAC,MAAK;MAC9B,IAAI,CAACC,cAAc,EAAE;IACvB,CAAC,CAAC;IACF;IACA;IACA;EACF;;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACJ,MAAM,CAACK,MAAM,CAAC;MACjBC,IAAI,EAAE,aAAa;MACnBC,QAAQ,EAAE;KACX,CAAC,CACDJ,IAAI,CAAEK,EAAgB,IAAI;MACzB;MACAA,EAAE,CAACC,UAAU,CAAC;;;;;UAKV,EAAE,EAAE,CAAC,CACNN,IAAI,CAAC,MAAMO,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAAC,CACvDC,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC,CAAC;IACpF,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC,CAAC;EACjF;EACAC,iBAAiBA,CAACC,OAAe,EAAEC,UAAkB;IACnD,IAAI,CAAChB,MAAM,CAACK,MAAM,CAAC;MACjBC,IAAI,EAAE,aAAa;MACnBC,QAAQ,EAAE;KACX,CAAC,CACDJ,IAAI,CAAEK,EAAgB,IAAI;MACzBA,EAAE,CAACC,UAAU,CAAC,8DAA8D,EAAE,CAACM,OAAO,EAAEC,UAAU,CAAC,CAAC,CACjGb,IAAI,CAAC,MAAK;QACTO,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC/C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;IAC3E,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC,CAAC;EACjF;;SAlDWhB,YAAY;;mBAAZA,MAAY,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,QAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAZzB,MAAY;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVzBX,EAAA,CAAAa,cAAA,cAAS;MACPb,EAAA,CAAAc,SAAA,wBAAuC;MACzCd,EAAA,CAAAe,YAAA,EAAU;;;;;;SDQGnC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}