{"ast":null,"code":"var _class;\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nfunction ForgotPasswordPage_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordPage_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid email format\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass ForgotPasswordPage {\n  constructor() {\n    this.email = ''; // Variable para almacenar el valor del campo de correo electrónico\n    this.emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n  }\n  resetPassword() {\n    // Aquí deberías implementar la lógica para enviar instrucciones de restablecimiento de contraseña\n    // Puedes acceder al valor del campo de correo electrónico con this.email\n    // Por ejemplo, puedes mostrar un mensaje de éxito o enviar una solicitud al servidor para restablecer la contraseña.\n  }\n  ngOnInit() {}\n}\n_class = ForgotPasswordPage;\n_class.ɵfac = function ForgotPasswordPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-forgot-password\"]],\n  decls: 22,\n  vars: 6,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 3, \"formControl\"], [4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function ForgotPasswordPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"forgotPassword\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"forgotPassword\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordPage_Template_form_ngSubmit_9_listener() {\n        return ctx.resetPassword();\n      });\n      i0.ɵɵelementStart(10, \"h2\");\n      i0.ɵɵtext(11, \"Forgot Your Password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \"Enter your email address and we will send you instructions to reset your password.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 7);\n      i0.ɵɵtemplate(18, ForgotPasswordPage_mat_error_18_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(19, ForgotPasswordPage_mat_error_19_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 9);\n      i0.ɵɵtext(21, \"Reset Password\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"formControl\", ctx.emailFormControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailFormControl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailFormControl.hasError(\"email\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.emailFormControl.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgForm, i3.IonContent, i3.IonHeader, i3.IonTitle, i3.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ForgotPasswordPage };","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ForgotPasswordPage","constructor","email","emailFormControl","required","resetPassword","ngOnInit","selectors","decls","vars","consts","template","ForgotPasswordPage_Template","rf","ctx","ɵɵlistener","ForgotPasswordPage_Template_form_ngSubmit_9_listener","ɵɵelement","ɵɵtemplate","ForgotPasswordPage_mat_error_18_Template","ForgotPasswordPage_mat_error_19_Template","ɵɵproperty","ɵɵadvance","hasError","invalid"],"sources":["C:\\Users\\diego\\Downloads\\RegistrApp-main\\RegistrApp\\src\\app\\home\\forgot\\forgot-password\\forgot-password.page.ts","C:\\Users\\diego\\Downloads\\RegistrApp-main\\RegistrApp\\src\\app\\home\\forgot\\forgot-password\\forgot-password.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  email: string = ''; // Variable para almacenar el valor del campo de correo electrónico\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n  resetPassword() {\r\n    // Aquí deberías implementar la lógica para enviar instrucciones de restablecimiento de contraseña\r\n    // Puedes acceder al valor del campo de correo electrónico con this.email\r\n    // Por ejemplo, puedes mostrar un mensaje de éxito o enviar una solicitud al servidor para restablecer la contraseña.\r\n  } \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-title>forgotPassword</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"large\">forgotPassword</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n  <form (ngSubmit)=\"resetPassword()\">\r\n    <h2>Forgot Your Password?</h2>\r\n    <p>Enter your email address and we will send you instructions to reset your password.</p>\r\n    \r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" id=\"email\" name=\"email\" [formControl]=\"emailFormControl\">\r\n      <mat-error *ngIf=\"emailFormControl.hasError('required')\">Email is required</mat-error>\r\n      <mat-error *ngIf=\"emailFormControl.hasError('email')\">Invalid email format</mat-error>\r\n    </div>\r\n    \r\n    <button type=\"submit\" [disabled]=\"emailFormControl.invalid\">Reset Password</button>\r\n  </form>\r\n\r\n\r\n</ion-content>\r\n"],"mappings":";AACA,SAASA,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICkBlDC,EAAA,CAAAC,cAAA,gBAAyD;IAAAD,EAAA,CAAAE,MAAA,wBAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACtFH,EAAA,CAAAC,cAAA,gBAAsD;IAAAD,EAAA,CAAAE,MAAA,2BAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;ADjB5F,MAKaC,kBAAkB;EAE7BC,YAAA;IAEA,KAAAC,KAAK,GAAW,EAAE,CAAC,CAAC;IACpB,KAAAC,gBAAgB,GAAG,IAAIT,WAAW,CAAC,EAAE,EAAE,CACrCC,UAAU,CAACS,QAAQ,EACnBT,UAAU,CAACO,KAAK,CACjB,CAAC;EANc;EAOhBG,aAAaA,CAAA;IACX;IACA;IACA;EAAA;EAGFC,QAAQA,CAAA,GACR;;SAhBWN,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAO,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/BjB,EAAA,CAAAC,cAAA,oBAAiC;MAElBD,EAAA,CAAAE,MAAA,qBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAIzCH,EAAA,CAAAC,cAAA,qBAAiC;MAGHD,EAAA,CAAAE,MAAA,qBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAGtDH,EAAA,CAAAC,cAAA,cAAmC;MAA7BD,EAAA,CAAAmB,UAAA,sBAAAC,qDAAA;QAAA,OAAYF,GAAA,CAAAT,aAAA,EAAe;MAAA,EAAC;MAChCT,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,6BAAqB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAC9BH,EAAA,CAAAC,cAAA,SAAG;MAAAD,EAAA,CAAAE,MAAA,0FAAkF;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAEzFH,EAAA,CAAAC,cAAA,cAAwB;MACHD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAChCH,EAAA,CAAAqB,SAAA,gBAA6E;MAC7ErB,EAAA,CAAAsB,UAAA,KAAAC,wCAAA,uBAAsF;MACtFvB,EAAA,CAAAsB,UAAA,KAAAE,wCAAA,uBAAsF;MACxFxB,EAAA,CAAAG,YAAA,EAAM;MAENH,EAAA,CAAAC,cAAA,iBAA4D;MAAAD,EAAA,CAAAE,MAAA,sBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAvB3EH,EAAA,CAAAyB,UAAA,qBAAoB;MAMnBzB,EAAA,CAAA0B,SAAA,GAAmB;MAAnB1B,EAAA,CAAAyB,UAAA,oBAAmB;MAYkBzB,EAAA,CAAA0B,SAAA,IAAgC;MAAhC1B,EAAA,CAAAyB,UAAA,gBAAAP,GAAA,CAAAX,gBAAA,CAAgC;MAChEP,EAAA,CAAA0B,SAAA,GAA2C;MAA3C1B,EAAA,CAAAyB,UAAA,SAAAP,GAAA,CAAAX,gBAAA,CAAAoB,QAAA,aAA2C;MAC3C3B,EAAA,CAAA0B,SAAA,GAAwC;MAAxC1B,EAAA,CAAAyB,UAAA,SAAAP,GAAA,CAAAX,gBAAA,CAAAoB,QAAA,UAAwC;MAGhC3B,EAAA,CAAA0B,SAAA,GAAqC;MAArC1B,EAAA,CAAAyB,UAAA,aAAAP,GAAA,CAAAX,gBAAA,CAAAqB,OAAA,CAAqC;;;;;;SDflDxB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}