{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Camsito/Desktop/RegistrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nlet HomePage = class HomePage {\n  constructor(router, http, toastController, sharedService // Inyecta el SharedService\n  ) {\n    this.router = router;\n    this.http = http;\n    this.toastController = toastController;\n    this.sharedService = sharedService;\n    this.credenciales = {\n      diego: '12345',\n      cam: '123456',\n      admin: 'admin1234'\n    };\n  }\n  mostrarMensaje(mensaje) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this.toastController.create({\n        message: mensaje,\n        duration: 2000,\n        position: 'top'\n      });\n      toast.present();\n    })();\n  }\n  validarYLogin() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const usuario = document.querySelector('input[name=\"User\"]').value;\n      const contrasena = document.querySelector('input[name=\"Pass\"]').value;\n      if (!usuario || !contrasena) {\n        const toast = yield _this2.toastController.create({\n          message: 'Los campos no pueden estar vacíos.',\n          duration: 2000,\n          position: 'top'\n        });\n        toast.present();\n        return;\n      }\n      // Verifica si las credenciales coinciden con el diccionario\n      if (_this2.credenciales.hasOwnProperty(usuario) && _this2.credenciales[usuario] === contrasena) {\n        // Las credenciales son válidas, redirige a la página /menu\n        _this2.sharedService.setUsername(usuario);\n        _this2.router.navigate(['/menu']);\n      } else {\n        // Las credenciales son incorrectas, muestra un mensaje de error\n        const toast = yield _this2.toastController.create({\n          message: 'Usuario o contraseña incorrectos.',\n          duration: 2000,\n          position: 'top'\n        });\n        toast.present();\n      }\n    })();\n  }\n  navigateToMenu() {\n    this.router.navigate(['/menu']); // Navigate to the \"Menu\" page\n  }\n};\n\nHomePage = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n  standalone: true,\n  imports: [MatProgressSpinnerModule]\n})], HomePage);\nexport { HomePage };","map":{"version":3,"names":["Component","MatProgressSpinnerModule","HomePage","constructor","router","http","toastController","sharedService","credenciales","diego","cam","admin","mostrarMensaje","mensaje","_this","_asyncToGenerator","toast","create","message","duration","position","present","validarYLogin","_this2","usuario","document","querySelector","value","contrasena","hasOwnProperty","setUsername","navigate","navigateToMenu","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["C:\\Users\\Camsito\\Desktop\\RegistrApp\\src\\app\\home\\home.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from '../../services/shared.service'; \r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n\r\ninterface Credenciales {\r\n  [usuario: string]: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n  standalone: true,\r\n  imports: [MatProgressSpinnerModule],\r\n})\r\nexport class HomePage {\r\n\r\n  private credenciales: Credenciales = {\r\n    diego: '12345',\r\n    cam: '123456',\r\n    admin: 'admin1234'\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    public toastController: ToastController,\r\n    private sharedService: SharedService // Inyecta el SharedService\r\n  ) {}\r\n  \r\n  async mostrarMensaje(mensaje: string) {\r\n    const toast = await this.toastController.create({\r\n      message: mensaje,\r\n      duration: 2000,\r\n      position: 'top'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async validarYLogin() {\r\n    const usuario= (document.querySelector('input[name=\"User\"]') as HTMLInputElement).value;\r\n    const contrasena = (document.querySelector('input[name=\"Pass\"]') as HTMLInputElement).value;\r\n\r\n    if (!usuario || !contrasena) {\r\n      const toast = await this.toastController.create({\r\n        message: 'Los campos no pueden estar vacíos.',\r\n        duration: 2000,\r\n        position: 'top'\r\n      });\r\n      toast.present();\r\n      return;\r\n    }\r\n\r\n    // Verifica si las credenciales coinciden con el diccionario\r\n    if (this.credenciales.hasOwnProperty(usuario) && this.credenciales[usuario] === contrasena) {\r\n      // Las credenciales son válidas, redirige a la página /menu\r\n      this.sharedService.setUsername(usuario);\r\n      this.router.navigate(['/menu']);\r\n    } else {\r\n      // Las credenciales son incorrectas, muestra un mensaje de error\r\n      const toast = await this.toastController.create({\r\n        message: 'Usuario o contraseña incorrectos.',\r\n        duration: 2000,\r\n        position: 'top'\r\n      });\r\n      toast.present();\r\n    }\r\n  }\r\n\r\n  navigateToMenu() {\r\n    this.router.navigate(['/menu']); // Navigate to the \"Menu\" page\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAKzC,SAAQC,wBAAwB,QAAO,oCAAoC;AAc3E,IAAaC,QAAQ,GAArB,MAAaA,QAAQ;EAQnBC,YACUC,MAAc,EACdC,IAAgB,EACjBC,eAAgC,EAC/BC,aAA4B,CAAC;EAAA,E;IAH7B,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IACL,KAAAC,eAAe,GAAfA,eAAe;IACd,KAAAC,aAAa,GAAbA,aAAa;IAVf,KAAAC,YAAY,GAAiB;MACnCC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,QAAQ;MACbC,KAAK,EAAE;KACR;EAOE;EAEGC,cAAcA,CAACC,OAAe;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClC,MAAMC,KAAK,SAASF,KAAI,CAACR,eAAe,CAACW,MAAM,CAAC;QAC9CC,OAAO,EAAEL,OAAO;QAChBM,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE;OACX,CAAC;MACFJ,KAAK,CAACK,OAAO,EAAE;IAAC;EAClB;EAEMC,aAAaA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAR,iBAAA;MACjB,MAAMS,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAsB,CAACC,KAAK;MACvF,MAAMC,UAAU,GAAIH,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAsB,CAACC,KAAK;MAE3F,IAAI,CAACH,OAAO,IAAI,CAACI,UAAU,EAAE;QAC3B,MAAMZ,KAAK,SAASO,MAAI,CAACjB,eAAe,CAACW,MAAM,CAAC;UAC9CC,OAAO,EAAE,oCAAoC;UAC7CC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;SACX,CAAC;QACFJ,KAAK,CAACK,OAAO,EAAE;QACf;;MAGF;MACA,IAAIE,MAAI,CAACf,YAAY,CAACqB,cAAc,CAACL,OAAO,CAAC,IAAID,MAAI,CAACf,YAAY,CAACgB,OAAO,CAAC,KAAKI,UAAU,EAAE;QAC1F;QACAL,MAAI,CAAChB,aAAa,CAACuB,WAAW,CAACN,OAAO,CAAC;QACvCD,MAAI,CAACnB,MAAM,CAAC2B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MAAM;QACL;QACA,MAAMf,KAAK,SAASO,MAAI,CAACjB,eAAe,CAACW,MAAM,CAAC;UAC9CC,OAAO,EAAE,mCAAmC;UAC5CC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;SACX,CAAC;QACFJ,KAAK,CAACK,OAAO,EAAE;;IAChB;EACH;EAEAW,cAAcA,CAAA;IACZ,IAAI,CAAC5B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACnC;CACD;;AAzDY7B,QAAQ,GAAA+B,UAAA,EAPpBjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,gBAAgB;EAC7BC,SAAS,EAAE,CAAC,gBAAgB,CAAC;EAC7BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACrC,wBAAwB;CACnC,CAAC,C,EACWC,QAAQ,CAyDpB;SAzDYA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}