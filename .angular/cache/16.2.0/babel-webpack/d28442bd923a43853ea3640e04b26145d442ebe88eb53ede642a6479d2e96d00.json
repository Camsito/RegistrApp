{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nfunction ForgotPasswordPage_ion_item_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 9);\n    i0.ɵɵtext(2, \"Invalid email format\");\n    i0.ɵɵelementEnd()();\n  }\n}\nclass ForgotPasswordPage {\n  constructor() {\n    this.email = ''; // Variable para almacenar el valor del campo de correo electrónico\n  }\n\n  isValidEmail(email) {\n    // Expresión regular para validar el formato del correo electrónico\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailPattern.test(email);\n  }\n  resetPassword() {\n    // Aquí deberías implementar la lógica para enviar instrucciones de restablecimiento de contraseña\n    // Puedes acceder al valor del campo de correo electrónico con this.email\n    // Por ejemplo, puedes mostrar un mensaje de éxito o enviar una solicitud al servidor para restablecer la contraseña.\n  }\n  ngOnInit() {}\n}\n_class = ForgotPasswordPage;\n_class.ɵfac = function ForgotPasswordPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-forgot-password\"]],\n  decls: 21,\n  vars: 5,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [3, \"ngSubmit\"], [\"position\", \"floating\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"color\", \"danger\", \"position\", \"stacked\"]],\n  template: function ForgotPasswordPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"forgotPassword\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"forgotPassword\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordPage_Template_form_ngSubmit_9_listener() {\n        return ctx.resetPassword();\n      });\n      i0.ɵɵelementStart(10, \"h2\");\n      i0.ɵɵtext(11, \"Forgot Your Password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \"Enter your email address and we will send you instructions to reset your password.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 5);\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"ion-input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ForgotPasswordPage_Template_ion_input_ngModelChange_17_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, ForgotPasswordPage_ion_item_18_Template, 3, 0, \"ion-item\", 7);\n      i0.ɵɵelementStart(19, \"button\", 8);\n      i0.ɵɵtext(20, \"Reset Password\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.email && !ctx.isValidEmail(ctx.email));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.email);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.IonContent, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ForgotPasswordPage };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ForgotPasswordPage","constructor","email","isValidEmail","emailPattern","test","resetPassword","ngOnInit","selectors","decls","vars","consts","template","ForgotPasswordPage_Template","rf","ctx","ɵɵlistener","ForgotPasswordPage_Template_form_ngSubmit_9_listener","ForgotPasswordPage_Template_ion_input_ngModelChange_17_listener","$event","ɵɵtemplate","ForgotPasswordPage_ion_item_18_Template","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\diego\\Downloads\\RegistrApp-main\\RegistrApp\\src\\app\\home\\forgot\\forgot-password\\forgot-password.page.ts","C:\\Users\\diego\\Downloads\\RegistrApp-main\\RegistrApp\\src\\app\\home\\forgot\\forgot-password\\forgot-password.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  email: string = ''; // Variable para almacenar el valor del campo de correo electrónico\r\n  isValidEmail(email: string): boolean {\r\n    // Expresión regular para validar el formato del correo electrónico\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    return emailPattern.test(email);\r\n  }\r\n  resetPassword() {\r\n    // Aquí deberías implementar la lógica para enviar instrucciones de restablecimiento de contraseña\r\n    // Puedes acceder al valor del campo de correo electrónico con this.email\r\n    // Por ejemplo, puedes mostrar un mensaje de éxito o enviar una solicitud al servidor para restablecer la contraseña.\r\n  } \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-title>forgotPassword</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"large\">forgotPassword</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n  <form (ngSubmit)=\"resetPassword()\">\r\n    <h2>Forgot Your Password?</h2>\r\n    <p>Enter your email address and we will send you instructions to reset your password.</p>\r\n    \r\n    <ion-item>\r\n      <ion-label position=\"floating\">Email</ion-label>\r\n      <ion-input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item *ngIf=\"email && !isValidEmail(email)\">\r\n      <ion-label color=\"danger\" position=\"stacked\">Invalid email format</ion-label>\r\n    </ion-item>\r\n\r\n    \r\n    <button type=\"submit\" [disabled]=\"!email\">Reset Password</button>\r\n  </form>\r\n\r\n\r\n</ion-content>\r\n"],"mappings":";;;;;;;ICoBIA,EAAA,CAAAC,cAAA,eAAgD;IACDD,EAAA,CAAAE,MAAA,2BAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;ADlBnF,MAKaC,kBAAkB;EAE7BC,YAAA;IAEA,KAAAC,KAAK,GAAW,EAAE,CAAC,CAAC;EAFJ;;EAGhBC,YAAYA,CAACD,KAAa;IACxB;IACA,MAAME,YAAY,GAAG,mDAAmD;IACxE,OAAOA,YAAY,CAACC,IAAI,CAACH,KAAK,CAAC;EACjC;EACAI,aAAaA,CAAA;IACX;IACA;IACA;EAAA;EAGFC,QAAQA,CAAA,GACR;;SAjBWP,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAQ,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/BlB,EAAA,CAAAC,cAAA,oBAAiC;MAElBD,EAAA,CAAAE,MAAA,qBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAIzCH,EAAA,CAAAC,cAAA,qBAAiC;MAGHD,EAAA,CAAAE,MAAA,qBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAGtDH,EAAA,CAAAC,cAAA,cAAmC;MAA7BD,EAAA,CAAAoB,UAAA,sBAAAC,qDAAA;QAAA,OAAYF,GAAA,CAAAT,aAAA,EAAe;MAAA,EAAC;MAChCV,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,6BAAqB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAC9BH,EAAA,CAAAC,cAAA,SAAG;MAAAD,EAAA,CAAAE,MAAA,0FAAkF;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAEzFH,EAAA,CAAAC,cAAA,gBAAU;MACuBD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAChDH,EAAA,CAAAC,cAAA,oBAA6E;MAA7BD,EAAA,CAAAoB,UAAA,2BAAAE,gEAAAC,MAAA;QAAA,OAAAJ,GAAA,CAAAb,KAAA,GAAAiB,MAAA;MAAA,EAAmB;MAAUvB,EAAA,CAAAG,YAAA,EAAY;MAE3FH,EAAA,CAAAwB,UAAA,KAAAC,uCAAA,sBAEW;MAGXzB,EAAA,CAAAC,cAAA,iBAA0C;MAAAD,EAAA,CAAAE,MAAA,sBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAzBzDH,EAAA,CAAA0B,UAAA,qBAAoB;MAMnB1B,EAAA,CAAA2B,SAAA,GAAmB;MAAnB3B,EAAA,CAAA0B,UAAA,oBAAmB;MAYsB1B,EAAA,CAAA2B,SAAA,IAAmB;MAAnB3B,EAAA,CAAA0B,UAAA,YAAAP,GAAA,CAAAb,KAAA,CAAmB;MAE1DN,EAAA,CAAA2B,SAAA,GAAmC;MAAnC3B,EAAA,CAAA0B,UAAA,SAAAP,GAAA,CAAAb,KAAA,KAAAa,GAAA,CAAAZ,YAAA,CAAAY,GAAA,CAAAb,KAAA,EAAmC;MAKxBN,EAAA,CAAA2B,SAAA,GAAmB;MAAnB3B,EAAA,CAAA0B,UAAA,cAAAP,GAAA,CAAAb,KAAA,CAAmB;;;;;;SDjBhCF,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}