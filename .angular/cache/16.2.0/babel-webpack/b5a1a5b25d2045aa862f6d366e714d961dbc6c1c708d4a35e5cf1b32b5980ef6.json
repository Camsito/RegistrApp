{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\Camsito\\Desktop\\RegistrApp\\src\\app\\home\\home.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from '../../services/shared.service';\r\nimport { SQLite, SQLiteObject } from '@awesome-cordova-plugins/sqlite/ngx';\r\nimport { ServiceGuardService } from '../../services/loginGuard/service-guard.service';\r\nimport { }\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n})\r\nexport class HomePage {\r\n  segmentValue: string = 'profesor';\r\n  constructor(\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private sqlite: SQLite,\r\n    private serviceGuard: ServiceGuardService,\r\n    private mensajeService: MensajeService\r\n  ) {}\r\n\r\n\r\n  async validarYLogin() {\r\n    const usuario = (document.querySelector('input[name=\"User\"]') as HTMLInputElement).value;\r\n    const contrasena = (document.querySelector('input[name=\"Pass\"]') as HTMLInputElement).value;\r\n\r\n    if (!usuario || !contrasena) {\r\n      this.mostrarMensaje('Los campos no pueden estar vacíos.');\r\n      return;\r\n    }\r\n\r\n    this.sqlite.create({\r\n      name: 'usuarios.db',\r\n      location: 'default'\r\n    })\r\n    .then((db: SQLiteObject) => {\r\n      db.executeSql('SELECT * FROM credenciales WHERE usuario = ? AND contrasena = ?', [usuario, contrasena])\r\n        .then(data => {\r\n          if (data.rows.length > 0) {\r\n            // Las credenciales son válidas, redirige a la página /menu\r\n            this.sharedService.setUsername(usuario);\r\n            if (this.segmentValue === 'profesor') {\r\n              this.router.navigate(['/menu-profesor']);\r\n            } else {\r\n              this.router.navigate(['/menu']);\r\n            }\r\n\r\n            // Marcar que el usuario ha pasado por el login\r\n            this.serviceGuard.setPassedLogin(true);\r\n          } else {\r\n            // Las credenciales son incorrectas, muestra un mensaje de error\r\n            this.mostrarMensaje('Usuario o contraseña incorrectos.');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error al ejecutar consulta en SQLite', error);\r\n          this.mostrarMensaje('Error al verificar las credenciales.');\r\n        });\r\n    })\r\n    .catch(error => {\r\n      console.error('Error al abrir la base de datos SQLite', error);\r\n      this.mostrarMensaje('Error al abrir la base de datos.');\r\n    });\r\n  }\r\n\r\n  navigateToMenu() {\r\n    this.router.navigate(['/menu']); // Navigate to the \"Menu\" page\r\n  }\r\n\r\n  navigateToForgot() {\r\n    this.router.navigate(['/forgot-password']); // Navigate to the \"Forgot\" page\r\n  }\r\n}\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}